{
	"id": "b43bd48d-5b66-4b4e-803f-5a25e07603c7",
	"createdAt": "2022-02-04T15:49:53.083Z",
	"updatedAt": "2022-07-27T07:34:25.943Z",
	"createdBy": "luuk.wosten@neptune-software.com",
	"changedBy": "kristin.eliassen@neptune-software.com",
	"objects": [
		{
			"fieldNo": "b59d574c-7037-4a1c-e00a-b48a317c6621",
			"fieldName": "oShell",
			"fieldParent": 0,
			"fieldType": "sap.m.Shell",
			"script": "",
			"request": [],
			"response": [],
			"attributes": [],
			"data": [
				{
					"fieldNo": "1e6a3171-a79c-4175-fa64-296fedee07df",
					"fieldName": "oApp",
					"fieldParent": "b59d574c-7037-4a1c-e00a-b48a317c6621",
					"fieldType": "sap.m.App",
					"script": "",
					"request": [],
					"response": [],
					"attributes": [],
					"data": [
						{
							"fieldNo": "6e5f077c-4c73-4f82-8d0a-86d7d5810adb",
							"fieldName": "PagePDFJS",
							"fieldParent": "1e6a3171-a79c-4175-fa64-296fedee07df",
							"fieldType": "sap.m.Page",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "showHeader",
									"grouping": "Properties",
									"value": "false",
									"script": "",
									"translation": []
								},
								{
									"attribute": "showFooter",
									"grouping": "Properties",
									"value": "false",
									"script": "",
									"translation": []
								}
							],
							"data": []
						},
						{
							"fieldNo": "c417c755-a50e-48a4-cf11-30fcaf44571c",
							"fieldName": "PageIFrame",
							"fieldParent": "1e6a3171-a79c-4175-fa64-296fedee07df",
							"fieldType": "sap.m.Page",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "showHeader",
									"grouping": "Properties",
									"value": "false",
									"script": "",
									"translation": []
								},
								{
									"attribute": "showFooter",
									"grouping": "Properties",
									"value": "false",
									"script": "",
									"translation": []
								}
							],
							"data": [
								{
									"fieldNo": "d4eeb94e-a641-4d5f-ea44-0e476df97020",
									"fieldName": "oPanel",
									"fieldParent": "c417c755-a50e-48a4-cf11-30fcaf44571c",
									"fieldType": "sap.m.Panel",
									"script": "",
									"request": [],
									"response": [],
									"attributes": [
										{
											"attribute": "height",
											"grouping": "Properties",
											"value": "100%",
											"script": "",
											"translation": []
										},
										{
											"attribute": "expanded",
											"grouping": "Properties",
											"value": "true",
											"script": "",
											"translation": []
										}
									],
									"data": [
										{
											"fieldNo": "255aa77e-a2b0-4581-e90a-7f67d8be4df0",
											"fieldName": "divPDFiFrame",
											"fieldParent": "d4eeb94e-a641-4d5f-ea44-0e476df97020",
											"fieldType": "sap.ui.core.HTML",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [],
											"data": []
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"fieldNo": 99999,
			"data": [
				{
					"fieldNo": "7871b601-860b-4b97-cb9d-6e30d6fb1d34",
					"fieldName": "HOW_TO_USE",
					"fieldParent": 99999,
					"fieldType": "neptune.Script",
					"script": [
						"==OBJECT STRING==",
						"/* Begin of Pre-Requisite Steps*/\r",
						"\r",
						"//Step 1:\r",
						"// Download all the files (6 files) from this link: https://tinyurl.com/c8yjywup\r",
						"\r",
						"//Step 2:\r",
						"// Go to Cockpit -> Development -> Resources -> Media Library\r",
						"// Create a new Folder with name 'PDFView'\r",
						"// Upload the Downloaded files in to the folder 'PDFView' of Media Library\r",
						"\r",
						"//Step 3:\r",
						"/* \r",
						"Place following lines of code in Header Section of the Launchpad where \r",
						"you are running the App\r",
						"\r",
						"<link rel=\"stylesheet\" type=\"text/css\" href=\"/media/root/PDFView/PDFView-3.0.css\" />\r",
						"<script src=\"/media/root/PDFView/compatibility.js\"></script>\r",
						"<script src=\"/media/root/PDFView/pdf.js\"></script>\r",
						"<script src=\"/media/root/PDFView/iscroll.js\"></script>\r",
						"<script src=\"/media/root/PDFView/PDFView-3.0.js\"></script>\r",
						"<script>\r",
						"\tPDFJS.workerSrc = \"/media/root/PDFView/pdf.worker.js\";\r",
						"</script>\r",
						"\r",
						"*/\r",
						"\r",
						"/* End of  Pre-Requisite Steps*/\r",
						"\r",
						"// Code Snippet\r",
						"// call this app using AppCache.Load() function on Neptune Launchpad\r",
						"// code snippet:\r",
						"// if (sap.n) {\r",
						"\r",
						"    // var dialogShowFlag = true;\r",
						"    // if (sap.ui.Device.system.phone || sap.ui.Device.system.tablet) {\r",
						"\r",
						"    //     if (typeof cordova === \"undefined\") {\r",
						"    //         dialogShowFlag = true;\r",
						"    //     } else {\r",
						"    //         dialogShowFlag = false;\r",
						"    //     }\r",
						"    // }\r",
						"    //     AppCache.Load(\"P9_CORE_PDF_VIEWER\", {\r",
						"    //         startParams: {\r",
						"    //             // fileData: base64_String,        // optional - either fileData or fileUrl or PDFTemplate\r",
						"    //             // mimeType : \"application/pdf\"    // optional - mandatory if fileData is sent\r",
						"    //             fileUrl: pdfLink,                  // optional - either fileData or fileUrl or PDFTemplate\r",
						"    //             PDFTemplate : \"template_name_from_PDF_Designer\", // optional - either fileData or fileUrl or PDFTemplate\r",
						"    //             PDFTemplateData: \"data_in_JSON_for_PDF_Template\",\r",
						"    //             fileName: \"Quiz.docx\",\r",
						"    //         },\r",
						"    //          dialogShow: dialogShowFlag\r",
						"    //     });\r",
						"// }\r",
						"\r",
						"// you can pass either content (base64 string of file) or url of the file or PDF Template Name from Planet 9 PDF Designer\r",
						"// - atleast one of these (content or url or PDF Template) is mandatory"
					],
					"request": [],
					"response": [],
					"attributes": [],
					"data": []
				},
				{
					"fieldNo": "b61f127d-9b0c-4702-c54e-8b4f6f9c208b",
					"fieldName": "Functions",
					"fieldParent": 99999,
					"fieldType": "neptune.Script",
					"script": [
						"==OBJECT STRING==",
						"if (sap.n) {\r",
						"    sap.n.Shell.attachBeforeClose(function () {\r",
						"        closeApp();\r",
						"    });\r",
						"}\r",
						"\r",
						"// ---------------------------------------------------\r",
						"// Entry function\r",
						"// ---------------------------------------------------\r",
						"\r",
						"// Set Data\r",
						"function PDFShow() {\r",
						"\r",
						"    // Internet Explorer or Win10 Client\r",
						"    if (sap.ui.Device.browser.name === \"ie\" || navigator.userAgent.indexOf(\"Edge\") > -1) {\r",
						"\r",
						"        // Internet Explorer\r",
						"        if (typeof cordova === \"undefined\") {\r",
						"            IFrameOpen();\r",
						"            return;\r",
						"        } else {\r",
						"            // Win10 Client\r",
						"            if (source === \"content\") {\r",
						"                NativeOpen();\r",
						"            } else {\r",
						"                openNativeAppviaURL();\r",
						"            }\r",
						"            return;\r",
						"        }\r",
						"    }\r",
						"\r",
						"\r",
						"    // Phone / Tablet\r",
						"    if (sap.ui.Device.system.phone || sap.ui.Device.system.tablet) {\r",
						"\r",
						"        if (typeof cordova === \"undefined\") {\r",
						"            if (source === \"content\") {\r",
						"                PDFJSOpen();\r",
						"            } else {\r",
						"                openPDFJSviaURL();\r",
						"            }\r",
						"        } else {\r",
						"            if (source === \"content\") {\r",
						"                NativeOpen();\r",
						"            } else {\r",
						"                openNativeAppviaURL();\r",
						"            }\r",
						"\r",
						"        }\r",
						"\r",
						"        return;\r",
						"    }\r",
						"\r",
						"    // Desktop\r",
						"    if (sap.ui.Device.system.desktop) {\r",
						"        oApp.to(PageIFrame, \"show\");\r",
						"        setTimeout(function () {\r",
						"            IFrameOpen();\r",
						"        }, 10);\r",
						"\r",
						"\r",
						"        return;\r",
						"    }\r",
						"}\r",
						"\r",
						"// ---------------------------------------------------\r",
						"// Common functions\r",
						"// ---------------------------------------------------\r",
						"function MakeBinary(pdfBase64) {\r",
						"\r",
						"    var raw = window.atob(pdfBase64);\r",
						"    var rawLength = raw.length;\r",
						"\r",
						"    var array = new Uint8Array(rawLength);\r",
						"    for (i = 0; i < rawLength; i++) {\r",
						"        array[i] = raw.charCodeAt(i);\r",
						"    }\r",
						"    return array;\r",
						"\r",
						"}\r",
						"\r",
						"// ---------------------------------------------------\r",
						"// Open PDF in IFrame\r",
						"// ---------------------------------------------------\r",
						"\r",
						"function IFrameOpen() {\r",
						"    var _pdfurl;\r",
						"    localId = ModelData.genID();\r",
						"    if (source === \"content\") {\r",
						"        var decodedPdfContent = atob(gFile.fileData);\r",
						"        var byteArray = new Uint8Array(decodedPdfContent.length)\r",
						"        for (var i = 0; i < decodedPdfContent.length; i++) {\r",
						"            byteArray[i] = decodedPdfContent.charCodeAt(i);\r",
						"        }\r",
						"        var blob = new Blob([byteArray.buffer], {\r",
						"            type: 'application/pdf'\r",
						"        });\r",
						"\r",
						"        _pdfurl = URL.createObjectURL(blob);\r",
						"    } else {\r",
						"        _pdfurl = gFile.fileUrl;\r",
						"    }\r",
						"\r",
						"    var content = \"<iframe id = \" + localId + \"_iFramePDF src =\" + _pdfurl + \" style='width: -webkit-fill-available; height: -webkit-fill-available;'></iframe>\"\r",
						"    divPDFiFrame.setContent(content);\r",
						"}\r",
						"\r",
						"// ---------------------------------------------------\r",
						"// Open mobile PDF.JS via source URL\r",
						"// ---------------------------------------------------\r",
						"\r",
						"function openPDFJSviaURL() {\r",
						"    // get Base64 from URL\r",
						"    var xhr = new XMLHttpRequest();\r",
						"\r",
						"    xhr.open(\"GET\", gFile.fileUrl, true);\r",
						"    xhr.responseType = \"blob\";\r",
						"\r",
						"    xhr.onload = function (e) {\r",
						"\r",
						"        var reader = new FileReader();\r",
						"        reader.onload = function (event) {\r",
						"            var fileData = event.target.result;  // fileData has base64 string\r",
						"            var mimeType = fileData.substring(fileData.lastIndexOf(\":\") + 1, fileData.indexOf(\";\"));\r",
						"            fileData = fileData.slice(fileData.indexOf(\",\") + 1);\r",
						"\r",
						"            gFile.fileData = fileData;\r",
						"            gFile.mimeType = mimeType;\r",
						"\r",
						"            PDFJSOpen();\r",
						"\r",
						"        }\r",
						"        var file = this.response;\r",
						"        reader.readAsDataURL(file)\r",
						"    };\r",
						"\r",
						"    xhr.send();\r",
						"}\r",
						"\r",
						"// ---------------------------------------------------\r",
						"// Open mobile PDF.JS\r",
						"// ---------------------------------------------------\r",
						"function PDFJSOpen() {\r",
						"\r",
						"    // Navigate\r",
						"    var PDFViewer = new sap.ui.core.HTML(\"PDFJS_pdf\", { content: \"<div><div id='pdfWrapper'><div id='pdfScroller'></div></div></div>\" });\r",
						"    PagePDFJS.addContent(PDFViewer);\r",
						"    oApp.to(PagePDFJS, \"show\");\r",
						"\r",
						"    // Zoom - Phone\r",
						"    if (sap.ui.Device.system.phone) {\r",
						"        pdfSettings.Scale = 0.4;\r",
						"        pdfSettings.ZoomMin = 0.42;\r",
						"    }\r",
						"\r",
						"    // Zoom - Tablet\r",
						"    if (sap.ui.Device.system.tablet) {\r",
						"        pdfSettings.Scale = 0.8;\r",
						"        pdfSettings.ZoomMin = 0.81;\r",
						"    }\r",
						"\r",
						"    // Show\r",
						"    setTimeout(function () {\r",
						"        PDFJSRender();\r",
						"        PDFJSLoadScroller();\r",
						"    }, 10);\r",
						"\r",
						"}\r",
						"\r",
						"\r",
						"function PDFJSRender() {\r",
						"\r",
						"    // Delete Old\r",
						"    var divScroller = document.getElementById('pdfScroller');\r",
						"    if (divScroller) {\r",
						"        while (divScroller.hasChildNodes()) {\r",
						"            divScroller.removeChild(divScroller.lastChild);\r",
						"        }\r",
						"    }\r",
						"\r",
						"    // Create Array\r",
						"    var pdfArray = MakeBinary(gFile.fileData);\r",
						"\r",
						"    PDFJS.useOnlyCssZoom = true;\r",
						"    PDFJS.getDocument(pdfArray).then(function getPdfForm(pdf) {\r",
						"\r",
						"        var View = document.getElementById('pdfScroller');\r",
						"        var pageNumber = 1;\r",
						"\r",
						"        pdfSettings.numPages = pdf.numPages;\r",
						"        PDFJSRenderPage(View, pdf, pageNumber++, function pageRenderingComplete() {\r",
						"            if (pageNumber > pdf.numPages) {\r",
						"                PDFJSAfterRender();\r",
						"                return;\r",
						"            }\r",
						"\r",
						"            PDFJSRenderPage(View, pdf, pageNumber++, pageRenderingComplete);\r",
						"        });\r",
						"    });\r",
						"}\r",
						"\r",
						"function PDFJSLoadScroller() {\r",
						"\r",
						"    var wrapper = document.getElementById('pdfWrapper');\r",
						"\r",
						"    pdfSettings.Scroller = new IScroll(wrapper, {\r",
						"        zoom: true,\r",
						"        scrollbars: true,\r",
						"        startZoom: pdfSettings.ZoomMin,\r",
						"        zoomMin: pdfSettings.ZoomMin,\r",
						"        zoomMax: 2,\r",
						"        scrollX: true,\r",
						"        scrollY: true\r",
						"    });\r",
						"\r",
						"}\r",
						"\r",
						"function PDFJSAfterRender() {\r",
						"    pdfSettings.Scroller.refresh();\r",
						"}\r",
						"\r",
						"function PDFJSRenderPage(div, pdf, pageNumber, callback) {\r",
						"\r",
						"    pdf.getPage(pageNumber).then(function (page) {\r",
						"\r",
						"        // Create viewport with 100% width\r",
						"        var pageWidth = document.getElementById('pdfWrapper').offsetWidth - 30;\r",
						"        var viewport = page.getViewport(pageWidth / page.getViewport(pdfSettings.Scale).width);\r",
						"        var pageDisplayWidth = viewport.width;\r",
						"        var pageDisplayHeight = viewport.height;\r",
						"\r",
						"        var pdfScroller = document.getElementById(\"pdfScroller\");\r",
						"        pdfScroller.style.width = viewport.width + 30 + 'px';\r",
						"\r",
						"        // Create page div pr PDF page\r",
						"        var pageDivHolder = document.createElement('div');\r",
						"        pageDivHolder.id = 'Page' + pageNumber;\r",
						"        pageDivHolder.className = 'pdfPage';\r",
						"        pageDivHolder.style.width = pageWidth + 'px';\r",
						"        pageDivHolder.style.height = pageDisplayHeight + 'px';\r",
						"        div.appendChild(pageDivHolder);\r",
						"\r",
						"        // Create canvas\r",
						"        var canvas = document.createElement('canvas');\r",
						"        var context = canvas.getContext('2d');\r",
						"        var canvasWidth = (pageWidth - viewport.width) / 2;\r",
						"\r",
						"        if (canvasWidth < 0) {\r",
						"            canvasWidth = 0;\r",
						"        }\r",
						"        canvas.width = viewport.width;\r",
						"        canvas.height = pageDisplayHeight;\r",
						"        canvas.style.left = canvasWidth + 'px';\r",
						"        pageDivHolder.appendChild(canvas);\r",
						"\r",
						"        // Render PDF page into canvas context\r",
						"        var renderContext = {\r",
						"            canvasContext: context,\r",
						"            viewport: viewport\r",
						"        };\r",
						"\r",
						"        page.render(renderContext).then(callback);\r",
						"\r",
						"        var formDiv = document.createElement('div');\r",
						"        pageDivHolder.appendChild(formDiv);\r",
						"    });\r",
						"\r",
						"}\r",
						"\r",
						"\r",
						"// ---------------------------------------------------\r",
						"// Open mobile native PDF Reader via source URL\r",
						"// ---------------------------------------------------\r",
						"function openNativeAppviaURL() {\r",
						"    // get Base64 from URL\r",
						"    var xhr = new XMLHttpRequest();\r",
						"\r",
						"    xhr.open(\"GET\", gFile.fileUrl, true);\r",
						"    xhr.responseType = \"blob\";\r",
						"\r",
						"    xhr.onload = function (e) {\r",
						"\r",
						"        var reader = new FileReader();\r",
						"        reader.onload = function (event) {\r",
						"            var fileData = event.target.result;  // fileData has base64 string\r",
						"            var mimeType = fileData.substring(fileData.lastIndexOf(\":\") + 1, fileData.indexOf(\";\"));\r",
						"            fileData = fileData.slice(fileData.indexOf(\",\") + 1);\r",
						"\r",
						"            gFile.fileData = fileData;\r",
						"            gFile.mimeType = mimeType;\r",
						"\r",
						"            NativeOpen();\r",
						"\r",
						"        }\r",
						"        var file = this.response;\r",
						"        reader.readAsDataURL(file)\r",
						"    };\r",
						"\r",
						"    xhr.send();\r",
						"}\r",
						"\r",
						"// ---------------------------------------------------\r",
						"// Open mobile native PDF Reader\r",
						"// ---------------------------------------------------\r",
						"function NativeOpen() {\r",
						"\r",
						"    // //  Close Dialog\r",
						"    // var parent = oShell.getParent();\r",
						"    // if (parent) {\r",
						"    //     var dia = parent.getParent();\r",
						"    //     if (dia) {\r",
						"    //         setTimeout(function () {\r",
						"    //             dia.close();\r",
						"    //         }, 2000);\r",
						"    //     }\r",
						"    // }\r",
						"\r",
						"    // Set Directory\r",
						"    switch (sap.ui.Device.os.name) {\r",
						"\r",
						"        case 'Android':\r",
						"            nativeDir = cordova.file.externalCacheDirectory;\r",
						"            break;\r",
						"\r",
						"        case 'iOS':\r",
						"            nativeDir = cordova.file.tempDirectory;\r",
						"            break;\r",
						"\r",
						"        case 'winphone':\r",
						"            nativeDir = cordova.file.externalCacheDirectory;\r",
						"            break;\r",
						"\r",
						"        // Windows 10 Client\r",
						"        case 'win':\r",
						"            nativeDir = cordova.file.cacheDirectory;\r",
						"            break;\r",
						"\r",
						"        default:\r",
						"            break;\r",
						"    }\r",
						"\r",
						"    // Create Array\r",
						"    dataArray = makeBinary(gFile.fileData);\r",
						"\r",
						"    // Create and Display File\r",
						"    window.resolveLocalFileSystemURL(nativeDir, function (dir) {\r",
						"        dir.getFile(gFile.fileName, {\r",
						"            create: true\r",
						"        }, function (file) {\r",
						"            nativeWriteLog(file, gFile.mimeType, nativeDir, gFile.fileName, dataArray);\r",
						"        });\r",
						"    });\r",
						"\r",
						"}\r",
						"\r",
						"nativeWriteLog = function (file, mimeType, nativeDir, fileName, dataArray) {\r",
						"\r",
						"    file.createWriter(function (fileWriter) {\r",
						"        fileWriter.onwriteend = function (e) {\r",
						"            cordova.plugins.fileOpener2.open(\r",
						"                nativeDir + fileName,\r",
						"                mimeType, {\r",
						"                error: function (e) {\r",
						"                    console.log('Error open: ' + e.status + ' - Error message: ' + e.message);\r",
						"                    closeApp();\r",
						"                },\r",
						"                success: function () {\r",
						"                    closeApp();\r",
						"                }\r",
						"            }\r",
						"            );\r",
						"        };\r",
						"\r",
						"        fileWriter.onerror = function (e) {\r",
						"            console.log('WRITE ERROR is');\r",
						"            console.log(e);\r",
						"        };\r",
						"\r",
						"        var blob = new Blob([dataArray], {\r",
						"            type: mimeType\r",
						"        });\r",
						"        fileWriter.write(blob);\r",
						"\r",
						"    }, nativeWriteFail);\r",
						"}\r",
						"\r",
						"nativeWriteFail = function (e) {\r",
						"    console.log('Error write: ' + e.status + ' - Error message: ' + e.message);\r",
						"}\r",
						"\r",
						"\r",
						"function closeApp() {\r",
						"    setTimeout(function () {\r",
						"\r",
						"        // Clear View\r",
						"        if (AppCache.View[localAppID]) {\r",
						"            AppCache.View[localAppID].removeAllContent();\r",
						"            AppCache.View[localAppID].destroy();\r",
						"            AppCache.View[localAppID] = null;\r",
						"            delete AppCache.View[localAppID];\r",
						"        }\r",
						"\r",
						"        // Clear All Events\r",
						"        delete sap.n.Apps[localAppID];\r",
						"    }, 300);\r",
						"}"
					],
					"request": [],
					"response": [],
					"attributes": [],
					"data": []
				},
				{
					"fieldNo": "98a1c55f-85df-43ee-87f3-31a41ccdcebe",
					"fieldName": "Init",
					"fieldParent": 99999,
					"fieldType": "neptune.Script",
					"script": [
						"==OBJECT STRING==",
						"var localId;\r",
						"var pdfSettings = {};\r",
						"var gFile;\r",
						"var source = \"content\";\r",
						"// Custom Init\r",
						"sap.ui.getCore().attachInit(function (data) {\r",
						"    gFile = data;\r",
						"\r",
						"    if(typeof gFile == \"undefined\"){\r",
						"        alert(\"No content given in startParams\");\r",
						"        return;\r",
						"    }\r",
						"\r",
						"    if (!gFile.fileData && !gFile.fileUrl && !gFile.PDFTemplate) {\r",
						"        alert(\"No content given in startParams\");\r",
						"        closeApp();\r",
						"        return;\r",
						"    }\r",
						"\r",
						"    if (gFile.fileData) {\r",
						"        source = \"content\";\r",
						"        if (!gFile.mimeType) {\r",
						"            alert(\"No mimeType given in startParams\");\r",
						"            closeApp();\r",
						"            return;\r",
						"        }\r",
						"    }\r",
						"\r",
						"    if (!gFile.fileData && gFile.fileUrl) {\r",
						"        source = \"url\";\r",
						"    }\r",
						"\r",
						"    if (!gFile.fileName) {\r",
						"        alert(\"No fileName given in startParams\");\r",
						"        closeApp();\r",
						"        return;\r",
						"    }\r",
						"\r",
						"    if (gFile.PDFTemplate) {\r",
						"        // await getPDFTemplate();\r",
						"\r",
						"        $.ajax({\r",
						"            type: \"POST\",\r",
						"            url: AppCache.Url+\"/pdf/\" + gFile.PDFTemplate,\r",
						"            data: gFile.PDFTemplateData,\r",
						"            success: function (data) {\r",
						"                // elem.src = \"data:application/pdf;base64,\" + data;\r",
						"                source = \"content\";\r",
						"                gFile.fileData = data;\r",
						"                gFile.mimeType = \"application/pdf\";\r",
						"                PDFShow();\r",
						"            },\r",
						"            error: function (result, status) {\r",
						"                if (result.responseJSON && result.responseJSON.status) {\r",
						"                    console.error(result.responseJSON.status);\r",
						"                }\r",
						"            }\r",
						"        });\r",
						"    } else {\r",
						"        PDFShow();\r",
						"    }\r",
						"});\r",
						"\r",
						"async function getPDFTemplate() {\r",
						"    // $.ajax({\r",
						"    //     type: \"POST\",\r",
						"    //     url: \"/pdf/\" + gFile.PDFTemplate,\r",
						"    //     data: gFile.PDFTemplateData,\r",
						"    //     success: function (data) {\r",
						"    //         // elem.src = \"data:application/pdf;base64,\" + data;\r",
						"    //         source = \"content\";\r",
						"    //         gFile.fileData = data;\r",
						"    //         gFile.mimeType = \"application/pdf\";\r",
						"    //     },\r",
						"    //     error: function (result, status) {\r",
						"    //         if (result.responseJSON && result.responseJSON.status) {\r",
						"    //             console.error(result.responseJSON.status);\r",
						"    //         }\r",
						"    //     }\r",
						"    // });\r",
						"}"
					],
					"request": [],
					"response": [],
					"attributes": [],
					"data": []
				}
			]
		},
		{
			"fieldNo": 99998,
			"data": []
		}
	],
	"ver": "22.7.27.934",
	"application": "p9_core_pdf_viewer",
	"title": "",
	"description": "",
	"enableFileStorage": false,
	"enableManifest": false,
	"enableStylesheet": false,
	"enableObfuscate": false,
	"onlyRunLaunchpad": false,
	"disabled": false,
	"loadLaunchpadCode": null,
	"loadApplicationCode": null,
	"appType": "",
	"ui5_m": true,
	"ui5_f": false,
	"ui5_table": false,
	"ui5_tnt": false,
	"ui5_uxap": false,
	"ui5_chart": false,
	"ui5_theme": "sap_belize",
	"ui5_version": "",
	"ui5_language": null,
	"cus_theme": "",
	"css": "",
	"header": "",
	"manifest": "",
	"globalScript": "",
	"deleted": false,
	"libHighchart": false,
	"libHighmap": false,
	"publicAccess": false,
	"ui5_bootstrap": false,
	"apis": []
}